@using X.PagedList.Mvc.Core
@using X.PagedList
@model BookManager.Models.BooksViewModel
@{
    var usdRate = ViewBag.UsdRate as decimal? ?? 0;
}


<h2>Lista książek</h2>

<a href="/Books/Create" class="btn btn-primary mb-3">Dodaj książkę</a>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table table-bordered table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th><a class="text-white" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">Tytuł</a></th>
            <th><a class="text-white" asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]">Autor</a></th>
            <th>Cena (PLN)</th>
            <th>Cena (USD)</th>
            <th><a class="text-white" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Data</a></th>
            <th>Dostępna</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
@foreach (var book in Model.Books)
{
    <tr>
        <td>@book.Title</td>
        <td>@book.Author</td>
        <td>@book.Price</td>
        <td>@Math.Round(book.Price / Model.UsdRate, 2)</td>
        <td>@book.PublishDate.ToShortDateString()</td>
        <td>@(book.Available ? "✓" : "✗")</td>
        <td>
            <a href="/Books/Edit/@book.Id" class="btn btn-sm btn-warning">Edytuj</a>
            <a href="/Books/Delete/@book.Id" class="btn btn-sm btn-danger">Usuń</a>
        </td>
    </tr>
}
    </tbody>
</table>

<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(
        Model.Books,
        page => Url.Action("Index", new
        {
            page,
            sortOrder = ViewContext.HttpContext.Request.Query["sortOrder"],
            searchString = ViewContext.HttpContext.Request.Query["searchString"]
        }),
        new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })
</div>



