@using X.PagedList.Mvc.Core
@using X.PagedList
@model BookManager.Models.BooksViewModel
@{
    var usdRate = ViewBag.UsdRate as decimal? ?? 0;
}


<h2 class="text-white">List of books</h2>
<div class="glass-box">
    <a href="/Books/Create" class="btn btn-primary mb-3">Add a book</a>

    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                <label>Filter: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" /></label>
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Index">Back to the list</a>
            </p>
        </div>
    </form>
        



    <div class="accordion mb-4" id="booksAccordion">
        <!-- Przeczytane -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingRead">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRead" aria-expanded="true" aria-controls="collapseRead">
                    ✓ Books I've already read 
                </button>
            </h2>
            <div id="collapseRead" class="accordion-collapse collapse show" aria-labelledby="headingRead" data-bs-parent="#booksAccordion">
                <div class="accordion-body">
                    @Html.Partial("_BookTable", (List<BookManager.Models.Book>)ViewBag.ReadBooks)
                </div>
            </div>
        </div>

        <!-- Do przeczytania -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingWant">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWant" aria-expanded="false" aria-controls="collapseWant">
                    <i class="bi bi-pin-angle"> </i>My bookshelf
                </button>
            </h2>
            <div id="collapseWant" class="accordion-collapse collapse" aria-labelledby="headingWant" data-bs-parent="#booksAccordion">
                <div class="accordion-body">
                    @Html.Partial("_BookTable", (List<BookManager.Models.Book>)ViewBag.WantBooks)
                </div>
            </div>
        </div>
    </div>






    <table class="table table-bordered table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th><a class="text-white" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">Title</a></th>
                <th><a class="text-white" asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]">Author</a></th>
                <th>Price (PLN)</th>
                <th>Price (USD)</th>
                <th><a class="text-white" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Date</a></th>
                <th>Availability</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
    @foreach (var book in Model.Books)
    {
        <tr>
            <td>@book.Title</td>
            <td>@book.Author</td>
            <td>@book.Price</td>
            <td>@Math.Round(book.Price / Model.UsdRate, 2)</td>
            <td>@book.PublishDate.ToShortDateString()</td>
            <td>@(book.Available ? "✓" : "✗")</td>
            <td>
                @{
                    var status = Model.Statuses.FirstOrDefault(s => s.BookId == book.Id);
                    bool isRead = status?.IsRead == true;
                    bool wantToRead = status?.WantToRead == true;
                }

                <div class="d-flex gap-2">
                    <!-- Przeczytana -->
                    <form asp-action="SetStatus" method="post" class="d-inline">
                        <input type="hidden" name="bookId" value="@book.Id" />
                        <input type="hidden" name="actionType" value="read" />
                        <button type="submit" class="btn btn-sm @(isRead ? "btn-success" : "btn-outline-success")">
                            ✓ Already read
                        </button>
                    </form>

                    <!-- Chcę przeczytać -->
                    <form asp-action="SetStatus" method="post" class="d-inline ms-2">
                        <input type="hidden" name="bookId" value="@book.Id" />
                        <input type="hidden" name="actionType" value="want" />
                        <button type="submit" class="btn btn-sm @(wantToRead ? "btn-info text-white" : "btn-outline-info")">
                            <i class="bi bi-pin-angle"></i> On the bookshelf
                        </button>
                    </form>
                </div>
            </td>


            <td>
                <a href="/Books/Edit/@book.Id" class="btn-transparent">
                    <i class="bi bi-pencil-fill"></i> Edit
                </a>
                <a href="/Books/Delete/@book.Id" class="btn-transparent">
                    <i class="bi bi-trash-fill"></i> Delete
                </a>
            </td>
        </tr>
    }
        </tbody>
    </table>

</div>

<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(
        Model.Books,
        page => Url.Action("Index", new { page }),
        new PagedListRenderOptions
        {
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link bg-dark text-white" }
        })
</div>




